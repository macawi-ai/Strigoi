// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: mdtter.proto

package probe

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopologyMorphOp_OpType int32

const (
	TopologyMorphOp_ADD_NODE         TopologyMorphOp_OpType = 0
	TopologyMorphOp_REMOVE_NODE      TopologyMorphOp_OpType = 1
	TopologyMorphOp_ADD_EDGE         TopologyMorphOp_OpType = 2
	TopologyMorphOp_REMOVE_EDGE      TopologyMorphOp_OpType = 3
	TopologyMorphOp_UPDATE_ATTRIBUTE TopologyMorphOp_OpType = 4
)

// Enum value maps for TopologyMorphOp_OpType.
var (
	TopologyMorphOp_OpType_name = map[int32]string{
		0: "ADD_NODE",
		1: "REMOVE_NODE",
		2: "ADD_EDGE",
		3: "REMOVE_EDGE",
		4: "UPDATE_ATTRIBUTE",
	}
	TopologyMorphOp_OpType_value = map[string]int32{
		"ADD_NODE":         0,
		"REMOVE_NODE":      1,
		"ADD_EDGE":         2,
		"REMOVE_EDGE":      3,
		"UPDATE_ATTRIBUTE": 4,
	}
)

func (x TopologyMorphOp_OpType) Enum() *TopologyMorphOp_OpType {
	p := new(TopologyMorphOp_OpType)
	*p = x
	return p
}

func (x TopologyMorphOp_OpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopologyMorphOp_OpType) Descriptor() protoreflect.EnumDescriptor {
	return file_mdtter_proto_enumTypes[0].Descriptor()
}

func (TopologyMorphOp_OpType) Type() protoreflect.EnumType {
	return &file_mdtter_proto_enumTypes[0]
}

func (x TopologyMorphOp_OpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopologyMorphOp_OpType.Descriptor instead.
func (TopologyMorphOp_OpType) EnumDescriptor() ([]byte, []int) {
	return file_mdtter_proto_rawDescGZIP(), []int{4, 0}
}

// MDTTEREvent represents a security event in multi-dimensional topological space
type MDTTEREvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metadata
	EventId   string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Traditional flat data (for compatibility)
	SourceIp        string `protobuf:"bytes,3,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	DestinationIp   string `protobuf:"bytes,4,opt,name=destination_ip,json=destinationIp,proto3" json:"destination_ip,omitempty"`
	DestinationPort uint32 `protobuf:"varint,5,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
	Protocol        string `protobuf:"bytes,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Action          string `protobuf:"bytes,7,opt,name=action,proto3" json:"action,omitempty"`
	// Topological context
	AstPosition *TopologicalPosition `protobuf:"bytes,8,opt,name=ast_position,json=astPosition,proto3" json:"ast_position,omitempty"`
	DsePosition *TopologicalPosition `protobuf:"bytes,9,opt,name=dse_position,json=dsePosition,proto3" json:"dse_position,omitempty"`
	// Behavioral data
	BehavioralEmbedding []float32           `protobuf:"fixed32,10,rep,packed,name=behavioral_embedding,json=behavioralEmbedding,proto3" json:"behavioral_embedding,omitempty"`
	ManifoldDescriptor  *BehavioralManifold `protobuf:"bytes,11,opt,name=manifold_descriptor,json=manifoldDescriptor,proto3" json:"manifold_descriptor,omitempty"`
	// Variety and intent
	VarietyAbsorptionMetric float32              `protobuf:"fixed32,12,opt,name=variety_absorption_metric,json=varietyAbsorptionMetric,proto3" json:"variety_absorption_metric,omitempty"`
	IntentField             *IntentProbabilities `protobuf:"bytes,13,opt,name=intent_field,json=intentField,proto3" json:"intent_field,omitempty"`
	// Topology changes
	TopologyChanges []*TopologyMorphOp `protobuf:"bytes,14,rep,name=topology_changes,json=topologyChanges,proto3" json:"topology_changes,omitempty"`
	// Session context
	SessionId           string `protobuf:"bytes,15,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ApplicationProtocol string `protobuf:"bytes,16,opt,name=application_protocol,json=applicationProtocol,proto3" json:"application_protocol,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MDTTEREvent) Reset() {
	*x = MDTTEREvent{}
	mi := &file_mdtter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MDTTEREvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MDTTEREvent) ProtoMessage() {}

func (x *MDTTEREvent) ProtoReflect() protoreflect.Message {
	mi := &file_mdtter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MDTTEREvent.ProtoReflect.Descriptor instead.
func (*MDTTEREvent) Descriptor() ([]byte, []int) {
	return file_mdtter_proto_rawDescGZIP(), []int{0}
}

func (x *MDTTEREvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *MDTTEREvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MDTTEREvent) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *MDTTEREvent) GetDestinationIp() string {
	if x != nil {
		return x.DestinationIp
	}
	return ""
}

func (x *MDTTEREvent) GetDestinationPort() uint32 {
	if x != nil {
		return x.DestinationPort
	}
	return 0
}

func (x *MDTTEREvent) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *MDTTEREvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *MDTTEREvent) GetAstPosition() *TopologicalPosition {
	if x != nil {
		return x.AstPosition
	}
	return nil
}

func (x *MDTTEREvent) GetDsePosition() *TopologicalPosition {
	if x != nil {
		return x.DsePosition
	}
	return nil
}

func (x *MDTTEREvent) GetBehavioralEmbedding() []float32 {
	if x != nil {
		return x.BehavioralEmbedding
	}
	return nil
}

func (x *MDTTEREvent) GetManifoldDescriptor() *BehavioralManifold {
	if x != nil {
		return x.ManifoldDescriptor
	}
	return nil
}

func (x *MDTTEREvent) GetVarietyAbsorptionMetric() float32 {
	if x != nil {
		return x.VarietyAbsorptionMetric
	}
	return 0
}

func (x *MDTTEREvent) GetIntentField() *IntentProbabilities {
	if x != nil {
		return x.IntentField
	}
	return nil
}

func (x *MDTTEREvent) GetTopologyChanges() []*TopologyMorphOp {
	if x != nil {
		return x.TopologyChanges
	}
	return nil
}

func (x *MDTTEREvent) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *MDTTEREvent) GetApplicationProtocol() string {
	if x != nil {
		return x.ApplicationProtocol
	}
	return ""
}

// TopologicalPosition represents a node's position in attack/defense topology
type TopologicalPosition struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NodeId         string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ConnectedNodes []string               `protobuf:"bytes,2,rep,name=connected_nodes,json=connectedNodes,proto3" json:"connected_nodes,omitempty"`
	Attributes     map[string]float32     `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	GraphEmbedding []float32              `protobuf:"fixed32,4,rep,packed,name=graph_embedding,json=graphEmbedding,proto3" json:"graph_embedding,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TopologicalPosition) Reset() {
	*x = TopologicalPosition{}
	mi := &file_mdtter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologicalPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologicalPosition) ProtoMessage() {}

func (x *TopologicalPosition) ProtoReflect() protoreflect.Message {
	mi := &file_mdtter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologicalPosition.ProtoReflect.Descriptor instead.
func (*TopologicalPosition) Descriptor() ([]byte, []int) {
	return file_mdtter_proto_rawDescGZIP(), []int{1}
}

func (x *TopologicalPosition) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *TopologicalPosition) GetConnectedNodes() []string {
	if x != nil {
		return x.ConnectedNodes
	}
	return nil
}

func (x *TopologicalPosition) GetAttributes() map[string]float32 {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *TopologicalPosition) GetGraphEmbedding() []float32 {
	if x != nil {
		return x.GraphEmbedding
	}
	return nil
}

// BehavioralManifold captures behavior as trajectories on smooth manifolds
type BehavioralManifold struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Point              []float32              `protobuf:"fixed32,1,rep,packed,name=point,proto3" json:"point,omitempty"`
	TangentVector      []float32              `protobuf:"fixed32,2,rep,packed,name=tangent_vector,json=tangentVector,proto3" json:"tangent_vector,omitempty"`
	Curvature          float32                `protobuf:"fixed32,3,opt,name=curvature,proto3" json:"curvature,omitempty"`
	DistanceFromNormal float32                `protobuf:"fixed32,4,opt,name=distance_from_normal,json=distanceFromNormal,proto3" json:"distance_from_normal,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BehavioralManifold) Reset() {
	*x = BehavioralManifold{}
	mi := &file_mdtter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BehavioralManifold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BehavioralManifold) ProtoMessage() {}

func (x *BehavioralManifold) ProtoReflect() protoreflect.Message {
	mi := &file_mdtter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BehavioralManifold.ProtoReflect.Descriptor instead.
func (*BehavioralManifold) Descriptor() ([]byte, []int) {
	return file_mdtter_proto_rawDescGZIP(), []int{2}
}

func (x *BehavioralManifold) GetPoint() []float32 {
	if x != nil {
		return x.Point
	}
	return nil
}

func (x *BehavioralManifold) GetTangentVector() []float32 {
	if x != nil {
		return x.TangentVector
	}
	return nil
}

func (x *BehavioralManifold) GetCurvature() float32 {
	if x != nil {
		return x.Curvature
	}
	return 0
}

func (x *BehavioralManifold) GetDistanceFromNormal() float32 {
	if x != nil {
		return x.DistanceFromNormal
	}
	return 0
}

// IntentProbabilities represents attacker intent as probability distributions
type IntentProbabilities struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Reconnaissance      float32                `protobuf:"fixed32,1,opt,name=reconnaissance,proto3" json:"reconnaissance,omitempty"`
	InitialAccess       float32                `protobuf:"fixed32,2,opt,name=initial_access,json=initialAccess,proto3" json:"initial_access,omitempty"`
	LateralMovement     float32                `protobuf:"fixed32,3,opt,name=lateral_movement,json=lateralMovement,proto3" json:"lateral_movement,omitempty"`
	PrivilegeEscalation float32                `protobuf:"fixed32,4,opt,name=privilege_escalation,json=privilegeEscalation,proto3" json:"privilege_escalation,omitempty"`
	DataCollection      float32                `protobuf:"fixed32,5,opt,name=data_collection,json=dataCollection,proto3" json:"data_collection,omitempty"`
	Exfiltration        float32                `protobuf:"fixed32,6,opt,name=exfiltration,proto3" json:"exfiltration,omitempty"`
	Impact              float32                `protobuf:"fixed32,7,opt,name=impact,proto3" json:"impact,omitempty"`
	CustomIntents       map[string]float32     `protobuf:"bytes,8,rep,name=custom_intents,json=customIntents,proto3" json:"custom_intents,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *IntentProbabilities) Reset() {
	*x = IntentProbabilities{}
	mi := &file_mdtter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntentProbabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntentProbabilities) ProtoMessage() {}

func (x *IntentProbabilities) ProtoReflect() protoreflect.Message {
	mi := &file_mdtter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntentProbabilities.ProtoReflect.Descriptor instead.
func (*IntentProbabilities) Descriptor() ([]byte, []int) {
	return file_mdtter_proto_rawDescGZIP(), []int{3}
}

func (x *IntentProbabilities) GetReconnaissance() float32 {
	if x != nil {
		return x.Reconnaissance
	}
	return 0
}

func (x *IntentProbabilities) GetInitialAccess() float32 {
	if x != nil {
		return x.InitialAccess
	}
	return 0
}

func (x *IntentProbabilities) GetLateralMovement() float32 {
	if x != nil {
		return x.LateralMovement
	}
	return 0
}

func (x *IntentProbabilities) GetPrivilegeEscalation() float32 {
	if x != nil {
		return x.PrivilegeEscalation
	}
	return 0
}

func (x *IntentProbabilities) GetDataCollection() float32 {
	if x != nil {
		return x.DataCollection
	}
	return 0
}

func (x *IntentProbabilities) GetExfiltration() float32 {
	if x != nil {
		return x.Exfiltration
	}
	return 0
}

func (x *IntentProbabilities) GetImpact() float32 {
	if x != nil {
		return x.Impact
	}
	return 0
}

func (x *IntentProbabilities) GetCustomIntents() map[string]float32 {
	if x != nil {
		return x.CustomIntents
	}
	return nil
}

// TopologyMorphOp represents a change in topology
type TopologyMorphOp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operation     TopologyMorphOp_OpType `protobuf:"varint,1,opt,name=operation,proto3,enum=probe.TopologyMorphOp_OpType" json:"operation,omitempty"`
	TargetId      string                 `protobuf:"bytes,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopologyMorphOp) Reset() {
	*x = TopologyMorphOp{}
	mi := &file_mdtter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopologyMorphOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyMorphOp) ProtoMessage() {}

func (x *TopologyMorphOp) ProtoReflect() protoreflect.Message {
	mi := &file_mdtter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyMorphOp.ProtoReflect.Descriptor instead.
func (*TopologyMorphOp) Descriptor() ([]byte, []int) {
	return file_mdtter_proto_rawDescGZIP(), []int{4}
}

func (x *TopologyMorphOp) GetOperation() TopologyMorphOp_OpType {
	if x != nil {
		return x.Operation
	}
	return TopologyMorphOp_ADD_NODE
}

func (x *TopologyMorphOp) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *TopologyMorphOp) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *TopologyMorphOp) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_mdtter_proto protoreflect.FileDescriptor

const file_mdtter_proto_rawDesc = "" +
	"\n" +
	"\fmdtter.proto\x12\x05probe\x1a\x1fgoogle/protobuf/timestamp.proto\"\x92\x06\n" +
	"\vMDTTEREvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tsource_ip\x18\x03 \x01(\tR\bsourceIp\x12%\n" +
	"\x0edestination_ip\x18\x04 \x01(\tR\rdestinationIp\x12)\n" +
	"\x10destination_port\x18\x05 \x01(\rR\x0fdestinationPort\x12\x1a\n" +
	"\bprotocol\x18\x06 \x01(\tR\bprotocol\x12\x16\n" +
	"\x06action\x18\a \x01(\tR\x06action\x12=\n" +
	"\fast_position\x18\b \x01(\v2\x1a.probe.TopologicalPositionR\vastPosition\x12=\n" +
	"\fdse_position\x18\t \x01(\v2\x1a.probe.TopologicalPositionR\vdsePosition\x121\n" +
	"\x14behavioral_embedding\x18\n" +
	" \x03(\x02R\x13behavioralEmbedding\x12J\n" +
	"\x13manifold_descriptor\x18\v \x01(\v2\x19.probe.BehavioralManifoldR\x12manifoldDescriptor\x12:\n" +
	"\x19variety_absorption_metric\x18\f \x01(\x02R\x17varietyAbsorptionMetric\x12=\n" +
	"\fintent_field\x18\r \x01(\v2\x1a.probe.IntentProbabilitiesR\vintentField\x12A\n" +
	"\x10topology_changes\x18\x0e \x03(\v2\x16.probe.TopologyMorphOpR\x0ftopologyChanges\x12\x1d\n" +
	"\n" +
	"session_id\x18\x0f \x01(\tR\tsessionId\x121\n" +
	"\x14application_protocol\x18\x10 \x01(\tR\x13applicationProtocol\"\x8b\x02\n" +
	"\x13TopologicalPosition\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12'\n" +
	"\x0fconnected_nodes\x18\x02 \x03(\tR\x0econnectedNodes\x12J\n" +
	"\n" +
	"attributes\x18\x03 \x03(\v2*.probe.TopologicalPosition.AttributesEntryR\n" +
	"attributes\x12'\n" +
	"\x0fgraph_embedding\x18\x04 \x03(\x02R\x0egraphEmbedding\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"\xa1\x01\n" +
	"\x12BehavioralManifold\x12\x14\n" +
	"\x05point\x18\x01 \x03(\x02R\x05point\x12%\n" +
	"\x0etangent_vector\x18\x02 \x03(\x02R\rtangentVector\x12\x1c\n" +
	"\tcurvature\x18\x03 \x01(\x02R\tcurvature\x120\n" +
	"\x14distance_from_normal\x18\x04 \x01(\x02R\x12distanceFromNormal\"\xbf\x03\n" +
	"\x13IntentProbabilities\x12&\n" +
	"\x0ereconnaissance\x18\x01 \x01(\x02R\x0ereconnaissance\x12%\n" +
	"\x0einitial_access\x18\x02 \x01(\x02R\rinitialAccess\x12)\n" +
	"\x10lateral_movement\x18\x03 \x01(\x02R\x0flateralMovement\x121\n" +
	"\x14privilege_escalation\x18\x04 \x01(\x02R\x13privilegeEscalation\x12'\n" +
	"\x0fdata_collection\x18\x05 \x01(\x02R\x0edataCollection\x12\"\n" +
	"\fexfiltration\x18\x06 \x01(\x02R\fexfiltration\x12\x16\n" +
	"\x06impact\x18\a \x01(\x02R\x06impact\x12T\n" +
	"\x0ecustom_intents\x18\b \x03(\v2-.probe.IntentProbabilities.CustomIntentsEntryR\rcustomIntents\x1a@\n" +
	"\x12CustomIntentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"\x8a\x03\n" +
	"\x0fTopologyMorphOp\x12;\n" +
	"\toperation\x18\x01 \x01(\x0e2\x1d.probe.TopologyMorphOp.OpTypeR\toperation\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\tR\btargetId\x12F\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2&.probe.TopologyMorphOp.ParametersEntryR\n" +
	"parameters\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	"\x06OpType\x12\f\n" +
	"\bADD_NODE\x10\x00\x12\x0f\n" +
	"\vREMOVE_NODE\x10\x01\x12\f\n" +
	"\bADD_EDGE\x10\x02\x12\x0f\n" +
	"\vREMOVE_EDGE\x10\x03\x12\x14\n" +
	"\x10UPDATE_ATTRIBUTE\x10\x04B,Z*github.com/macawi-ai/strigoi/modules/probeb\x06proto3"

var (
	file_mdtter_proto_rawDescOnce sync.Once
	file_mdtter_proto_rawDescData []byte
)

func file_mdtter_proto_rawDescGZIP() []byte {
	file_mdtter_proto_rawDescOnce.Do(func() {
		file_mdtter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mdtter_proto_rawDesc), len(file_mdtter_proto_rawDesc)))
	})
	return file_mdtter_proto_rawDescData
}

var file_mdtter_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mdtter_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_mdtter_proto_goTypes = []any{
	(TopologyMorphOp_OpType)(0),   // 0: probe.TopologyMorphOp.OpType
	(*MDTTEREvent)(nil),           // 1: probe.MDTTEREvent
	(*TopologicalPosition)(nil),   // 2: probe.TopologicalPosition
	(*BehavioralManifold)(nil),    // 3: probe.BehavioralManifold
	(*IntentProbabilities)(nil),   // 4: probe.IntentProbabilities
	(*TopologyMorphOp)(nil),       // 5: probe.TopologyMorphOp
	nil,                           // 6: probe.TopologicalPosition.AttributesEntry
	nil,                           // 7: probe.IntentProbabilities.CustomIntentsEntry
	nil,                           // 8: probe.TopologyMorphOp.ParametersEntry
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_mdtter_proto_depIdxs = []int32{
	9,  // 0: probe.MDTTEREvent.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 1: probe.MDTTEREvent.ast_position:type_name -> probe.TopologicalPosition
	2,  // 2: probe.MDTTEREvent.dse_position:type_name -> probe.TopologicalPosition
	3,  // 3: probe.MDTTEREvent.manifold_descriptor:type_name -> probe.BehavioralManifold
	4,  // 4: probe.MDTTEREvent.intent_field:type_name -> probe.IntentProbabilities
	5,  // 5: probe.MDTTEREvent.topology_changes:type_name -> probe.TopologyMorphOp
	6,  // 6: probe.TopologicalPosition.attributes:type_name -> probe.TopologicalPosition.AttributesEntry
	7,  // 7: probe.IntentProbabilities.custom_intents:type_name -> probe.IntentProbabilities.CustomIntentsEntry
	0,  // 8: probe.TopologyMorphOp.operation:type_name -> probe.TopologyMorphOp.OpType
	8,  // 9: probe.TopologyMorphOp.parameters:type_name -> probe.TopologyMorphOp.ParametersEntry
	9,  // 10: probe.TopologyMorphOp.timestamp:type_name -> google.protobuf.Timestamp
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_mdtter_proto_init() }
func file_mdtter_proto_init() {
	if File_mdtter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mdtter_proto_rawDesc), len(file_mdtter_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mdtter_proto_goTypes,
		DependencyIndexes: file_mdtter_proto_depIdxs,
		EnumInfos:         file_mdtter_proto_enumTypes,
		MessageInfos:      file_mdtter_proto_msgTypes,
	}.Build()
	File_mdtter_proto = out.File
	file_mdtter_proto_goTypes = nil
	file_mdtter_proto_depIdxs = nil
}
